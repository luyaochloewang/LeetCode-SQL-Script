#615. Average Salary: Departments VS Company ***
with cte as (select date_format(s.pay_date,'%Y-%m') as pay_month, e.department_id, avg(s.amount) as avg_amount
from salary s
join employee e on s.employee_id = e.employee_id
group by pay_month, e.department_id),

cte1 as (select date_format(pay_date,'%Y-%m') as pay_month, avg(amount) as am
from salary 
group by pay_month)

select cte1.pay_month, cte.department_id, 
           case when cte.avg_amount > cte1.am then 'higher'
                when cte.avg_amount < cte1.am then 'lower'
                when cte.avg_amount = cte1.am then 'same'
                else null
           end as comparison
 from cte
 left join cte1
 on cte.pay_month= cte1.pay_month;

#618. Students Report By Geography ***
with murica as
(select name as america, row_number() over(order by name) as row_num 
from student
where continent = 'America'),
asia as
(select name as asia, row_number() over(order by name) as row_num
from student
where continent = 'Asia'), europe as
(select name as europe, row_number() over(order by name) as row_num
from student
where continent = 'Europe')
select america, asia, europe
from murica a
left join asia aa on a.row_num = aa.row_num
left join europe e on a.row_num = e.row_num

#619. Biggest Single Number
SELECT MAX(num) AS num
FROM (SELECT num FROM my_numbers GROUP BY num HAVING COUNT(num) = 1) AS t;

#620. Not Boring Movies 
# find all odd result, use (column % 2)
# Return the remainder of 18/4 (SELECT 18 MOD 4;) 
Select * from Cinema
where (id % 2) = 1
and description <> 'boring'
order by rating desc 

#626. Exchange Seats
Select if(id < (select count(*) from seat), if(id mod 2=0, id-1, id+1), if(id mod 2=0, id-1, id)) as id, student
from seat 
order by id asc;

#627. Swap Salary
# Update method. use CASE WHEN to swap
UPDATE salary
SET sex  = (CASE WHEN sex = 'm' 
            THEN  'f' 
            ELSE 'm' 
            END)
            
#1045. Customers Who Bought All Products
# having count = 2 
select customer_id
from customer c
group by customer_id
having count(distinct product_key)=(select count(distinct product_key) from product)

#1050. Actors and Directors Who Cooperated At Least Three Times
select actor_id, director_id
from ActorDirector
group by actor_id, director_id
having count(1) >= 3

#1068. Product Sales Analysis I
Select p.product_name, s.year, s.price from Sales s
inner join Product p on s.product_id = p.product_id

#1069. Product Sales Analysis II
Select product_id, sum(quantity) total_quantity from Sales
group by product_id

#1070. Product Sales Analysis III
SELECT product_id, year AS first_year, quantity, price
FROM Sales
WHERE (product_id, year) IN (
SELECT product_id, MIN(year) as year
FROM Sales
GROUP BY product_id);

#1075. Project Employees I
#1076. Project Employees II
#1077. Project Employees III
#1082. Sales Analysis I
#1083. Sales Analysis II
#1084. Sales Analysis III
#1097. Game Play Analysis V
#1098. Unpopular Books
#1107. New Users Daily Count
